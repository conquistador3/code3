#include<bits/stdc++.h>
const int N = 100005;
using namespace std;
long long int n, m;
vector<int> g[N], gr[N];
long long int used[N];
vector<long long int> order;
vector<long long int> comp;
vector <long long int> l;
long long int ans[N];
void dfs(int v)
{
	used[v] = 1;
	for (int i = 0; i < g[v].size(); i++)
	{
		int to = g[v][i];
		if (used[to])
			continue;
		dfs(to);
	}
	order.push_back(v);
}
void dfs2(int v)
{
	comp.push_back(v);
	used[v] = 1;
	for (int i = 0; i < gr[v].size(); i++)
	{
		int to = gr[v][i];
		if (used[to])
			continue;
		dfs2(to);
	}
}
int main(){
	ios_base::sync_with_stdio(0);
	//cin.tie(0);
	cin >> n >>m;
	long long int i,s=0;
	for (i = 1; i <= m; i++)
	{
		long long int a, b;
		cin >> a >> b;
		a;
		b;
		g[a].push_back(b);
		gr[b].push_back(a);
	}
	for ( i = 0; i < n; i++)
	{
		if (used[i])
			continue;
		dfs(i);
	}
	reverse(order.begin(), order.end());
	for ( i = 0; i < n; i++)
	{
		used[i] = 0;
	}
	long long int c=1,k;
	for ( i = 0; i < order.size(); i++)
	{
		long long int id = order[i];
		if (used[id])
			continue;
		comp.clear();
		dfs2(id);
	//cout<<comp.size();
		long long int m=INT_MAX,k=0;
		for (int j = 0; j < comp.size(); j++)
		{
		  //  cout<<comp[j]<<" ";
m=min(m,comp[j]);
		}
		//cout<<"\n";
		for (int j = 0; j < comp.size(); j++)
		{
ans[comp[j]]=m;
		}
 
	}
	for(i=0;i<n;i++)
    {
        cout<<ans[i]<<"\n";
    }
	return 0;
}
